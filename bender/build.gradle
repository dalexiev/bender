apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = "bg.dalexiev"
version = "1.1.7"

android {
    compileSdkVersion 23
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.1.7"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:support-annotations:23.2.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"
}

def siteUrl = 'https://github.com/dalexiev/bender'      // Homepage URL of the library
def gitUrl = 'https://github.com/dalexiev/bender.git'   // Git repository URL

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apiKey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = project.name
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/dalexiev/bender/issues'
        vcsUrl = gitUrl
        licenses = ["MIT"]
        labels = ['android', 'content provider', 'sqlite']
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'An Android library that helps you expose your SQLite data through Content Providers.'
                url siteUrl
                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'dalexiev'
                        name 'Danail Alexiev'
                        email 'danail.lxv@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    title = "Bender API"

    options.links("http://docs.oracle.com/javase/7/docs/api/");
    options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference");

    // First add all of your dependencies to the classpath, then add the android jars
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    // We're excluding these generated files
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}